#!/usr/bin/env ruby
# encoding: UTF-8

require "berkszero"
require "optparse"

def cyan(text)
  puts "\e[36m#{text}\e[0m"
end

def up(opts = BerksZero.options)
  # setup chef-zero
  kfile, bjson = BerksZero.berkszero(opts)
  cyan("Wrote out #{kfile}: ")
  puts ::File.readlines(kfile)
  cyan("Wrote out #{bjson}: ")
  puts ::File.readlines(bjson)
end

# command line arguments
def cli_args
  { :host      => { :args    => ["-H", "--host HOST", "Host to bind to"],
                    :default => BerksZero.ipaddress },
    :port      => { :args    => ["-p", "--port PORT", "Port to listen on"],
                    :default => "4000" },
    :log_level => { :args    => ["-l",
                                 "--log-level LEVEL",
                                 "Set the output log level"],
                    :default => "info" } }
end

def parse_args
  # Parses command line arguments
  cli = cli_args
  options = BerksZero.options
  op = ::OptionParser.new do |opts|
    opts.banner = "Usage: bzup [options]"
    cli.map do |opt, ks|
      args = ks[:args]
      args[2] += " (default: #{ks[:default]})" if ks.include?(:default)
      opts.on(*args) { |a| options[opt] = a }
    end
  end.parse!
  options.merge(op)
end

up(parse_args)
